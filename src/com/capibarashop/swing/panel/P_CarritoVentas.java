/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.capibarashop.swing.panel;

import com.capibarashop.clases.DetalleCarrito;
import com.capibarashop.clases.Direccion;
import com.capibarashop.clases.Producto;
import com.capibarashop.clases.RenderImagenTabla;
import com.capibarashop.clases.RenderTextoCentrado;
import com.capibarashop.clases.Usuario;
import com.capibarashop.clases.dao.VentaDAO;
import com.capibarashop.dialogs.direccion.DialogSeleccionarDireccion;
import com.capibarashop.clases.Utilidades;
import com.capibarashop.clases.dao.CarritoDAO;
import com.capibarashop.clases.dao.DetalleCarritoDAO;
import java.util.List;
import javax.swing.ImageIcon;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Angel Aimar
 */
public class P_CarritoVentas extends javax.swing.JPanel {
    
    Utilidades u = new Utilidades();
    private int idCarrito;
    private DefaultTableModel modelo;
    /**
     * Creates new form P_CarritoVentas
     */
    public P_CarritoVentas() {
        initComponents();
        
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return switch (columnIndex) {
                    case 0 -> ImageIcon.class;
                    case 1 -> String.class;
                    case 2 -> Integer.class;
                    case 3, 4 -> String.class;
                    default -> Object.class;
                };
            }
        };

        modelo.setColumnIdentifiers(new String[]{"Foto", "Nombre", "Cantidad", "Subtotal", "Total Producto"});
        jTCarrito.setModel(modelo);
        jTCarrito.setRowHeight(60);
        jTCarrito.getColumnModel().getColumn(0).setCellRenderer(new RenderImagenTabla(48, 48));
        
        // Tamaños explícitos para evitar que las columnas colapsen
        jTCarrito.getColumnModel().getColumn(0).setPreferredWidth(60);   // Foto
        jTCarrito.getColumnModel().getColumn(1).setPreferredWidth(200);  // Nombre
        jTCarrito.getColumnModel().getColumn(2).setPreferredWidth(80);   // Cantidad
        jTCarrito.getColumnModel().getColumn(3).setPreferredWidth(100);  // Subtotal
        jTCarrito.getColumnModel().getColumn(4).setPreferredWidth(120);  // Total Producto
        
        // Forzar render personalizado para texto (ya lo haces bien)
        RenderTextoCentrado renderTexto = new RenderTextoCentrado();
        for (int i = 1; i <= 4; i++) {
            jTCarrito.getColumnModel().getColumn(i).setCellRenderer(renderTexto);
        }

        modelo.addTableModelListener(e -> {
            if (e.getColumn() == 2) {
                int fila = e.getFirstRow();
                int cantidad = (int) modelo.getValueAt(fila, 2);
                double precioUnitario = Double.parseDouble(modelo.getValueAt(fila, 3).toString().replace("$", ""));
                double subtotal = cantidad * precioUnitario;

                modelo.setValueAt(String.format("$%.2f", subtotal), fila, 4);
                actualizarTotalGeneral();
            }
        });
        
        idCarrito = obtenerIdCarritoActivo();
        cargarProductosDelCarrito();
    }

    private int obtenerIdCarritoActivo() {
        CarritoDAO dao = new CarritoDAO();
        return dao.obtenerCarritoActivoID(Usuario.getUsuarioActual().getId());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSPTabla = new javax.swing.JScrollPane();
        jTCarrito = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblDireccionEntrega = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jPanel1.setBackground(new java.awt.Color(241, 184, 184));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Carrito");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jTCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jTCarrito.setPreferredSize(new java.awt.Dimension(670, 20));
        jSPTabla.setViewportView(jTCarrito);

        jPanel1.add(jSPTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 670, 540));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, 170, 140));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jButton1.setText("Pagar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 170, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Dirección de Entrega:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, -1, -1));

        lblDireccionEntrega.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDireccionEntrega.setForeground(new java.awt.Color(0, 0, 0));
        lblDireccionEntrega.setText("lblDireccionEntrega");
        jPanel1.add(lblDireccionEntrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 110, 170, 230));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarTotalGeneral() {
        double total = 0.0;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            String subtotalStr = modelo.getValueAt(i, 4).toString().replace("$", "");
            total += Double.parseDouble(subtotalStr);
        }

        DefaultTableModel modeloTotales = (DefaultTableModel) jTable2.getModel();
        modeloTotales.setRowCount(0);
        modeloTotales.addRow(new Object[]{String.format("$%.2f", total)});
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Direccion direccion = Usuario.getUsuarioActual().getDireccionSeleccionada();

        if (direccion != null) {
            // Mostrar datos al usuario
            lblDireccionEntrega.setText(direccion.toString());
        } else {
            DialogSeleccionarDireccion dialog = new DialogSeleccionarDireccion(null, true);
            dialog.setVisible(true);
            if (direccion == null) {
                u.generarMensajeGenerico(this, Utilidades.FALTAN_CAMPOS,
                        "¡Falta la Dirección!",
                        "No se seleccionó una Dirección\nSino ¿Cómo te llegará tú Paquete?",
                        "Dirección", JOptionPane.INFORMATION_MESSAGE, 150, 150);
                return;
            }
        }
        
        VentaDAO ventaDAO = new VentaDAO();
        boolean exito = ventaDAO.realizarVentaDesdeCarrito(idCarrito, Usuario.getUsuarioActual().getId(), direccion);

        if (exito) {
            new CarritoDAO().cerrarCarrito(idCarrito);
            u.generarMensajeGenerico(this, Utilidades.EXITO_PROCESO_GENERICO,
                    "¡Compra Realizada con éxito!",
                    "Tu compra se ha realizado con éxito",
                    "Compra Realizada", JOptionPane.INFORMATION_MESSAGE, 150, 150);
            modelo.setRowCount(0);
            actualizarTotalGeneral();
        } else {
            u.generarMensajeGenerico(this, Utilidades.ERROR_FALLO,
                    "¡Hubo un error inesperado!",
                    "Tu compra no se pudo realizar",
                    "Compra no realiada", JOptionPane.ERROR_MESSAGE, 150, 150);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargarProductosDelCarrito() {
        modelo.setRowCount(0); // Limpia la tabla
        double total = 0.0;

        int idUsuario = Usuario.getUsuarioActual().getId();
        CarritoDAO carritoDAO = new CarritoDAO();
        int idCarrito = carritoDAO.obtenerCarritoActivo(idUsuario).getId();
        
        DetalleCarritoDAO dao = new DetalleCarritoDAO();
        List<DetalleCarrito> lista = dao.obtenerDetalles(idCarrito);
        
//        System.out.println("Cargando productos para carrito ID: " + idCarrito);
//        System.out.println("Total productos encontrados: " + lista.size());
        
        for (DetalleCarrito detalle : lista) {
            Producto producto = detalle.getProducto();
            
            
            if (producto != null) {
                int cantidad = detalle.getCantidad();
                double precio = producto.getPrecio();
                double subtotal = cantidad * precio;

                // Escalar imagen (si existe)
                ImageIcon icono = null;
                if (producto.getImagen() != null) {
                    Image imagenEscalada = new ImageIcon(producto.getImagen()).getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
                    icono = new ImageIcon(imagenEscalada);
                }

                System.out.println("Agregando a tabla: "
                + "nombre=" + producto.getNombre()
                + ", cantidad=" + cantidad
                + ", precio=" + precio
                + ", subtotal=" + subtotal);
                
                modelo.addRow(new Object[]{
                    icono, // Imagen renderizada
                    producto.getNombre(),
                    cantidad,
                    String.format("$%.2f", precio),
                    String.format("$%.2f", subtotal)
                });

                total += subtotal;
            } else {
                System.err.println("❌ Producto nulo en DetalleCarrito.");
            }
        }

        // Actualiza el total
        DefaultTableModel modeloTotales = (DefaultTableModel) jTable2.getModel();
        modeloTotales.setRowCount(0);
        modeloTotales.addRow(new Object[]{String.format("$%.2f", total)});
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jSPTabla;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTCarrito;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblDireccionEntrega;
    // End of variables declaration//GEN-END:variables
}
