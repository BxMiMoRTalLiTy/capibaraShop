/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.capibarashop.swing.panel;

import com.capibarashop.clases.EstilosBotones;
import com.capibarashop.clases.Producto;
import com.capibarashop.clases.Usuario;
import com.capibarashop.clases.Utilidades;
import com.capibarashop.clases.dao.CarritoDAO;
import com.capibarashop.clases.dao.ProductoDAO;
import javax.swing.ImageIcon;
import java.awt.Image;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.SpinnerNumberModel;
import javax.swing.BorderFactory;
import javax.swing.SwingConstants;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;


/**
 *
 * @author Angel Aimar
 */
public class P_ProductoItem extends javax.swing.JPanel {
    
    private Producto producto = new Producto();
    private Utilidades u = new Utilidades();
    
    /**
     * Creates new form P_Producto
     */
    public P_ProductoItem() {
        initComponents();
        aplicarEstilo();
    }

    private void aplicarEstilo(){
        lblNombre.setFont(new Font("Segoe UI", Font.BOLD, 16));
        lblNombre.setForeground(new Color(40, 40, 90));

        lblPrecio.setFont(new Font("Segoe UI", Font.BOLD, 18));
        lblPrecio.setForeground(new Color(0, 153, 76));  // Verde brillante

        lblCategoria.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblCategoria.setForeground(Color.GRAY);

        lblStock.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblStock.setForeground(Color.GRAY);

        lblVendedor.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblVendedor.setForeground(new Color(70, 70, 70));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        jLNombreP = new javax.swing.JLabel();
        jLCategoria = new javax.swing.JLabel();
        lblCategoria = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        jLVendedor = new javax.swing.JLabel();
        lblVendedor = new javax.swing.JLabel();
        jLSeleccionarCantidad = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        jLPrecio = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        jLStock = new javax.swing.JLabel();
        jSCantidad = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnAgregarCarrito = new javax.swing.JButton();
        jLStock1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(241, 237, 237));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagen.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 270, 270));
        lblImagen.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY, 1));
        lblImagen.setHorizontalAlignment(SwingConstants.CENTER);

        jLNombreP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLNombreP.setForeground(new java.awt.Color(0, 0, 0));
        jLNombreP.setText("Nombre Producto:");
        jPanel1.add(jLNombreP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLCategoria.setForeground(new java.awt.Color(0, 0, 0));
        jLCategoria.setText("Cateogoria:");
        jPanel1.add(jLCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        lblCategoria.setForeground(new java.awt.Color(0, 0, 0));
        lblCategoria.setText("jLabel2");
        jPanel1.add(lblCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 160, 20));

        lblNombre.setForeground(new java.awt.Color(0, 0, 0));
        lblNombre.setText("jLabel1");
        jPanel1.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 250, 20));

        jLVendedor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLVendedor.setForeground(new java.awt.Color(0, 0, 0));
        jLVendedor.setText("Vendedor:");
        jPanel1.add(jLVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, -1, -1));

        lblVendedor.setForeground(new java.awt.Color(0, 0, 0));
        lblVendedor.setText("jLabel1");
        jPanel1.add(lblVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, 320, 20));

        jLSeleccionarCantidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLSeleccionarCantidad.setForeground(new java.awt.Color(0, 0, 0));
        jLSeleccionarCantidad.setText("Seleccionar Cantidad:");
        jPanel1.add(jLSeleccionarCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        lblStock.setForeground(new java.awt.Color(0, 0, 0));
        lblStock.setText("n");
        jPanel1.add(lblStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 50, 20));

        jLPrecio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLPrecio.setForeground(new java.awt.Color(0, 0, 0));
        jLPrecio.setText("Precio Unitario:");
        jPanel1.add(jLPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        lblPrecio.setForeground(new java.awt.Color(0, 0, 0));
        lblPrecio.setText("jLabel1");
        jPanel1.add(lblPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 140, 20));

        jLStock.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLStock.setForeground(new java.awt.Color(0, 0, 0));
        jLStock.setText("Descripción:");
        jPanel1.add(jLStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, 20));
        jPanel1.add(jSCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 150, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setWrapStyleWord(true);
        txtDescripcion.setEditable(false);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 270, 60));

        btnAgregarCarrito.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        btnAgregarCarrito.setText("Agregar al Carrito");
        btnAgregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCarritoActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarCarrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, -1, -1));
        btnAgregarCarrito.setBackground(new Color(51, 153, 255));
        btnAgregarCarrito.setForeground(Color.WHITE);
        btnAgregarCarrito.setFont(new Font("Segoe UI", Font.BOLD, 16));
        btnAgregarCarrito.setFocusPainted(false);
        btnAgregarCarrito.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));

        jLStock1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLStock1.setForeground(new java.awt.Color(0, 0, 0));
        jLStock1.setText("Stock:");
        jPanel1.add(jLStock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCarritoActionPerformed
        // 1. Obtener la cantidad seleccionada
        int cantidad = (Integer) jSCantidad.getValue();
        ProductoDAO dao = new ProductoDAO();
        Producto productoActualizado = dao.obtenerPorId(producto.getId());
        
        
        if (cantidad <= 0 || cantidad > producto.getStock()) {
            JOptionPane.showMessageDialog(this, "Cantidad inválida o insuficiente stock.");
            return;
        }
        
        CarritoDAO carritoDAO = new CarritoDAO();
        int idUsuario = Usuario.getUsuarioActual().getId();
        int idCarrito = carritoDAO.crearCarrito(idUsuario);
        
        if (idCarrito == -1) {
            JOptionPane.showMessageDialog(this, "No se pudo crear o acceder al carrito del usuario.");
            return;
        }
        
        boolean agregado = carritoDAO.agregarProducto(idCarrito, productoActualizado.getId(), cantidad);

        // Validación extra de cantidad
        System.out.println("Cantidad seleccionada: " + cantidad + " | Stock disponible: " + productoActualizado.getStock());
        
        if (agregado) {
            u.generarMensajeGenerico(this, Utilidades.CARRITO_AGREGANDO_PRODUCTO,
            "¡Producto agregado exitosamente!",
            "Felicidades, el producto llamado: " + productoActualizado.getNombre() +" se agregó con éxito",
            "Error Inesperado",JOptionPane.ERROR_MESSAGE, 150, 150);
            

            ProductoDAO productoDAO = new ProductoDAO();
            Producto actualizado = productoDAO.obtenerPorId(producto.getId());
            
            if (actualizado != null) {
                producto.setStock(actualizado.getStock());
                lblStock.setText(Integer.toString(actualizado.getStock()));

                // Actualizar el Spinner también
                SpinnerNumberModel model = new SpinnerNumberModel(1, 1, actualizado.getStock(), 1);
                jSCantidad.setModel(model);

                // Deshabilitar botón si ya no hay stock
                if (actualizado.getStock() == 0) {
                    btnAgregarCarrito.setEnabled(false);
                    btnAgregarCarrito.setText("Sin Stock");
                    btnAgregarCarrito.setBackground(new Color(244, 67, 54)); // Rojo suave
                }
            }
            
            
            P_AplicacionCliente app = (P_AplicacionCliente) SwingUtilities.getAncestorOfClass(P_AplicacionCliente.class, this);
            if (app != null) {
                app.getCarritoVentasPanel().recargarCarrito();
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo añadir el producto al carrito.");
        }
        
        
    }//GEN-LAST:event_btnAgregarCarritoActionPerformed

    
    public void setDatosProducto(Producto p) {
        if (p == null) return;

        // Nombre
        lblNombre.setText(p.getNombre());
        this.producto = p;
        // Categoría
        if (p.getCategoria() != null) {
            lblCategoria.setText(p.getCategoria().getNombre());
        } else {
            lblCategoria.setText("Sin categoría");
        }

        // Precio
        lblPrecio.setText(String.format("$%.2f", p.getPrecio()));

        // Stock
        lblStock.setText(String.valueOf(p.getStock()));
        
        // Vendedor
        if (p.getUsuario() != null) {
            lblVendedor.setText(p.getUsuario().getNombre());
        } else {
            lblVendedor.setText("Desconocido");
        }

        // Descripción
        txtDescripcion.setText(p.getDescripcion());

        // Spinner cantidad: establecer máximo = stock
        SpinnerNumberModel modelo = new SpinnerNumberModel(1, 1, p.getStock(), 1);
        jSCantidad.setModel(modelo);
        
        // Imagen
        
        try {
            Image img;
            if (p.getImagen() != null && p.getImagen().length > 0) {
                img = new ImageIcon(p.getImagen()).getImage();
            } else {
                InputStream is = getClass().getResourceAsStream(Utilidades.DEFAULT_PRODUCTO);
                if (is == null) throw new IOException("No se encontró la imagen por defecto.");
                byte[] datos = is.readAllBytes();
                img = new ImageIcon(datos).getImage();
            }

            // Escalar imagen a 270x270
            Image scaled = img.getScaledInstance(270, 270, Image.SCALE_SMOOTH);
            lblImagen.setIcon(new ImageIcon(scaled));
        } catch (IOException e) {
            System.err.println("Error cargando imagen: " + e.getMessage());
        }
        
        if (p.getCategoria() != null) {
            int categoriaID = p.getCategoria().getId();

            Color[] colores = {
                new Color(255, 235, 238), // Rosa pálido (Blush Pink)
                new Color(232, 245, 233), // Verde menta claro (Mint Green)
                new Color(227, 242, 253), // Azul hielo (Ice Blue)
                new Color(255, 249, 196), // Amarillo pastel (Lemon Cream)
                new Color(248, 237, 227), // Arena suave (Soft Sand)
                new Color(237, 231, 246), // Lavanda claro (Light Lavender)
                new Color(255, 224, 178), // Durazno pastel (Peach)
                new Color(200, 230, 201), // Verde pistacho claro (Light Pistachio)
                new Color(179, 229, 252), // Azul cielo suave (Sky Blue)
                new Color(255, 204, 188), // Coral pastel
                new Color(215, 204, 200), // Gris rosado
                new Color(225, 245, 254), // Azul bebé
                new Color(252, 228, 236), // Rosado floral
                new Color(255, 245, 238), // Beige rosado (Seashell)
                new Color(204, 255, 229)  // Verde agua claro (Aquamarine)
            };

            // Asegurar que no exceda el arreglo
            Color colorFondo;
            if (categoriaID >= 1 && categoriaID <= colores.length) {
                colorFondo = colores[categoriaID - 1];
            } else {
                colorFondo = Color.WHITE;
            }

            jPanel1.setBackground(colorFondo);
            
            if (p.getStock() > 0) {
                // Producto disponible
                btnAgregarCarrito.setEnabled(true);
                btnAgregarCarrito.setText("Agregar al Carrito");
                btnAgregarCarrito.setBackground(new Color(76, 175, 80)); // Verde suave
                btnAgregarCarrito.setForeground(Color.WHITE);
            } else {
                // Sin stock
                btnAgregarCarrito.setEnabled(false);
                btnAgregarCarrito.setText("Sin Stock");
                btnAgregarCarrito.setBackground(new Color(244, 67, 54)); // Rojo suave
                btnAgregarCarrito.setForeground(Color.WHITE);
            }
            
            btnAgregarCarrito.setFocusPainted(false);
            btnAgregarCarrito.setBorderPainted(false);
            btnAgregarCarrito.setOpaque(true);
            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCarrito;
    private javax.swing.JLabel jLCategoria;
    private javax.swing.JLabel jLNombreP;
    private javax.swing.JLabel jLPrecio;
    private javax.swing.JLabel jLSeleccionarCantidad;
    private javax.swing.JLabel jLStock;
    private javax.swing.JLabel jLStock1;
    private javax.swing.JLabel jLVendedor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSCantidad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblVendedor;
    private javax.swing.JTextArea txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
