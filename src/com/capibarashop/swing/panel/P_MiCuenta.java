/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.capibarashop.swing.panel;

import com.capibarashop.clases.Usuario;
import com.capibarashop.clases.Utilidades;
import com.capibarashop.clases.Direccion;
import com.capibarashop.clases.dao.DireccionDAO;
import com.capibarashop.clases.dao.UsuarioDAO;
import com.capibarashop.dialogs.direccion.DialogAgregarDireccion;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Angel Aimar
 */
public class P_MiCuenta extends javax.swing.JPanel {

    Utilidades u = new Utilidades();
    
   
    
    /**
     * Creates new form P_MiCuenta
     */
    public P_MiCuenta() {
        initComponents();
        setModoEdicion(false);
        cargarDatosUsuario();
        txtNuevaContrasena.setEchoChar('‚Ä¢');
        txtConfirmarContrasena.setEchoChar('‚Ä¢');
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDCFechaN = new com.toedter.calendar.JDateChooser();
        txtNombre = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnEditarToggle = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtConfirmarContrasena = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txtNuevaContrasena = new javax.swing.JPasswordField();
        btnVerConfirmarContra = new javax.swing.JToggleButton();
        btnVerNuevaContra = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jCBDirecciones = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btnAgregarDireccion = new javax.swing.JButton();
        btnGuardarDireccionPrincipal = new javax.swing.JButton();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(30, 110, 114));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel1.setText("Password confirmar:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        jLabel2.setFont(new java.awt.Font("STXinwei", 0, 36)); // NOI18N
        jLabel2.setText("DATOS DE MI USUARIO");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel3.setText("Usuario:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel4.setText("Correo:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel5.setText("Telefono:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));
        jPanel1.add(jDCFechaN, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 160, -1));

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 360, -1));

        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 370, -1));

        txtCorreo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 370, -1));

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 270, -1));

        btnEditarToggle.setText("‚úé Editar");
        btnEditarToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarToggleActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditarToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, -1, -1));

        btnCancelar.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        btnGuardar.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        jLabel6.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel6.setText("Fecha Nacimiento:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));
        jPanel1.add(txtConfirmarContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 190, -1));

        jLabel7.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel7.setText("Password:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, -1, -1));
        jPanel1.add(txtNuevaContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 190, -1));

        btnVerConfirmarContra.setText("üëÅ");
        btnVerConfirmarContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerConfirmarContraActionPerformed(evt);
            }
        });
        jPanel1.add(btnVerConfirmarContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, -1));

        btnVerNuevaContra.setText("üëÅ");
        btnVerNuevaContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerNuevaContraActionPerformed(evt);
            }
        });
        jPanel1.add(btnVerNuevaContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, -1, -1));

        jLabel8.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel8.setText("Nombre:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        jPanel1.add(jCBDirecciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 350, 70));

        jLabel9.setFont(new java.awt.Font("STXinwei", 0, 24)); // NOI18N
        jLabel9.setText("Direccion:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, -1, -1));

        btnAgregarDireccion.setFont(new java.awt.Font("STXinwei", 0, 18)); // NOI18N
        btnAgregarDireccion.setText("Agregar Direccion");
        btnAgregarDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDireccionActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, -1, -1));

        btnGuardarDireccionPrincipal.setFont(new java.awt.Font("STXinwei", 0, 18)); // NOI18N
        btnGuardarDireccionPrincipal.setText("Guardar Direccion");
        btnGuardarDireccionPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarDireccionPrincipalActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarDireccionPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarToggleActionPerformed
        // TODO add your handling code here:
        boolean editar = btnEditarToggle.isSelected();
        
        setModoEdicion(editar);
        
        if (!editar) {
            cargarDatosUsuario(); // m√©todo que rellena los campos con los datos del usuario actual
        }
        
        btnEditarToggle.setText(editar ? "Cancelar Edici√≥n" : "‚úé Editar");
    }//GEN-LAST:event_btnEditarToggleActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardarCambios();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        
        if (hayCambios()) {
            int confirm = JOptionPane.showConfirmDialog(this,
                "Hay cambios sin guardar. ¬øDeseas descartarlos?",
                "Cancelar edici√≥n", JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) return;
        }
        
        btnEditarToggle.setSelected(false);
        setModoEdicion(false);
        cargarDatosUsuario(); // restaurar datos anteriores
        btnEditarToggle.setText("‚úé Editar");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnVerConfirmarContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerConfirmarContraActionPerformed
        // TODO add your handling code here:
        if (btnVerConfirmarContra.isSelected()) {
            txtConfirmarContrasena.setEchoChar((char) 0); // Mostrar texto
            btnVerConfirmarContra.setText("Ocultar");
        } else {
            txtConfirmarContrasena.setEchoChar('‚Ä¢'); // Ocultar texto
            btnVerConfirmarContra.setText("üëÅ");
        }
    }//GEN-LAST:event_btnVerConfirmarContraActionPerformed

    private void btnVerNuevaContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerNuevaContraActionPerformed
        // TODO add your handling code here:
        if (btnVerNuevaContra.isSelected()) {
            txtNuevaContrasena.setEchoChar((char) 0); // Mostrar texto
            btnVerNuevaContra.setText("Ocultar");
        } else {
            txtNuevaContrasena.setEchoChar('‚Ä¢'); // Ocultar texto
            btnVerNuevaContra.setText("üëÅ");
        }
    }//GEN-LAST:event_btnVerNuevaContraActionPerformed

    private void btnAgregarDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDireccionActionPerformed
        DialogAgregarDireccion dialog = new DialogAgregarDireccion(null, true);
        
        dialog.setOnDireccionGuardada(() -> {
            // Recargar combo y seleccionar la nueva principal
            cargarDirecciones();
            DireccionDAO dao = new DireccionDAO();
            Direccion principal = dao.obtenerDireccionPrincipal(Usuario.getUsuarioActual().getId());

            if (principal != null) {
                for (int i = 0; i < jCBDirecciones.getItemCount(); i++) {
                    Direccion d = jCBDirecciones.getItemAt(i);
                    if (d.getId() == principal.getId()) {
                        jCBDirecciones.setSelectedIndex(i);
                        Usuario.getUsuarioActual().setDireccionSeleccionada(d);
                        break;
                    }
                }
            }
        });

        dialog.setVisible(true);
    }//GEN-LAST:event_btnAgregarDireccionActionPerformed

    private void btnGuardarDireccionPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarDireccionPrincipalActionPerformed
        guardarDireccionPrincipal();
    }//GEN-LAST:event_btnGuardarDireccionPrincipalActionPerformed

    private void cargarDatosUsuario() {
        Usuario usuario = Usuario.getUsuarioActual();
        
        java.util.Date fechaN = usuario.getFechaNacimiento();
        
        if (usuario != null) {
            txtNombre.setText(usuario.getNombre());
            txtUsuario.setText(usuario.getUsuarioNombre());
            txtCorreo.setText(usuario.getEmail());
            txtTelefono.setText(usuario.getTel());
            jDCFechaN.setDate(fechaN);
            txtNuevaContrasena.setText(usuario.getContrasena());
            txtConfirmarContrasena.setText(usuario.getContrasena());
        } else {
            JOptionPane.showMessageDialog(this, "No se encontr√≥ el usuario actual.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        cargarDirecciones();
        if (usuario.getDireccionSeleccionada() != null) {
            for (int i = 0; i < jCBDirecciones.getItemCount(); i++) {
                Direccion d = jCBDirecciones.getItemAt(i);
                if (d.getId() == usuario.getDireccionSeleccionada().getId()) {
                    jCBDirecciones.setSelectedIndex(i);
                    break;
                }
            }
        }
        
    }
    
    private void cargarDirecciones() {
        DireccionDAO dao = new DireccionDAO();
        List<Direccion> lista = dao.listarPorUsuario(Usuario.getUsuarioActual().getId());

        jCBDirecciones.removeAllItems();

        for (Direccion d : lista) {
            jCBDirecciones.addItem(d);
        }

        // Establecer como seleccionada la direcci√≥n principal
        Direccion principal = dao.obtenerDireccionPrincipal(Usuario.getUsuarioActual().getId());
        if (principal != null) {
            for (int i = 0; i < jCBDirecciones.getItemCount(); i++) {
                Direccion item = jCBDirecciones.getItemAt(i);
                if (item.getId() == principal.getId()) {
                    jCBDirecciones.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
    
    private void guardarDireccionPrincipal() {
        Direccion seleccionada = (Direccion) jCBDirecciones.getSelectedItem();
        if (seleccionada != null) {
            try {
                DireccionDAO dao = new DireccionDAO();
                dao.marcarComoPrincipal(seleccionada.getId(), Usuario.getUsuarioActual().getId());
                Usuario.getUsuarioActual().setDireccionSeleccionada(seleccionada);

                JOptionPane.showMessageDialog(this, "Direcci√≥n principal actualizada correctamente.", "√âxito", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al actualizar la direcci√≥n principal.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void guardarCambios() {
        if (!btnEditarToggle.isSelected()) {
            u.generarMensajeGenerico(this, Utilidades.USUARIO_EDITOR_DESACTIVADO,
                "¬°Falto Activar el modo Editor!", "Para poder editar, activa el modo de Edici√≥n", 
                "Modo Editor no Activo", JOptionPane.INFORMATION_MESSAGE, 150, 150);
            return;
        }
        
        try {
            String nombre = txtNombre.getText().trim();
            String usuarioNombre = txtUsuario.getText().trim();
            String email = txtCorreo.getText().trim();
            String telefono = txtTelefono.getText().trim();
            java.util.Date fechaNac = jDCFechaN.getDate();
            
            if (nombre.isEmpty() || usuarioNombre.isEmpty() || email.isEmpty() || telefono.isEmpty() || fechaNac == null) {
                u.generarMensajeGenerico(this, Utilidades.FALTAN_CAMPOS,
                    "¬°Falta campos!",
                    "Revisa que campos faltan para agregarlos",
                    "Actualizaci√≥n", JOptionPane.INFORMATION_MESSAGE, 150, 150);
                return;
            }

            if (!email.contains("@")) {
                u.generarMensajeGenerico(this, Utilidades.FALTAN_CAMPOS,
                        "¬°El correo no es v√°lido!",
                        "Revisa le falta un @ a ese correo",
                        "Registro", JOptionPane.INFORMATION_MESSAGE, 150, 150);
                return;
            }

            if (telefono.length() != 10 || !telefono.matches("[0-9]+")) {
                u.generarMensajeGenerico(this, Utilidades.FALTAN_CAMPOS,
                        "¬°N√∫mero de telfono no v√°lido!",
                        "Revisa que tenga 10 digitos el telefono",
                        "Registro", JOptionPane.INFORMATION_MESSAGE, 150, 150);
                return;
            }
            
            String nuevaContrasena = new String(txtNuevaContrasena.getPassword()).trim();
            String confirmarContrasena = new String(txtConfirmarContrasena.getPassword()).trim();

            Usuario usuario = Usuario.getUsuarioActual();  // o tu instancia actual

            usuario.setNombre(nombre);
            usuario.setUsuarioNombre(usuarioNombre);
            usuario.setEmail(email);
            usuario.setTel(telefono);
            usuario.setFechaNacimiento(new java.sql.Date(fechaNac.getTime())); // conversi√≥n correcta

            UsuarioDAO dao = new UsuarioDAO();
            if (dao.usuarioExisteOtro(usuarioNombre, usuario.getId())) {
                u.generarMensajeGenerico(this, Utilidades.USUARIO_CORREO_DUPLICADO,
                    "Nombre de usuario duplicado", 
                    "El nombre de usuario ya est√° registrado por otro usuario.",
                    "Error", JOptionPane.ERROR_MESSAGE, 150, 150);
                return;
            }

            if (dao.emailExisteOtro(email, usuario.getId())) {
                u.generarMensajeGenerico(this, Utilidades.USUARIO_CORREO_DUPLICADO,
                    "Correo electr√≥nico duplicado", 
                    "El correo electr√≥nico ya est√° registrado por otro usuario.",
                    "Error", JOptionPane.ERROR_MESSAGE, 150, 150);
                return;
            }

            if (!nuevaContrasena.isEmpty() || !confirmarContrasena.isEmpty()) {
                if (!nuevaContrasena.equals(confirmarContrasena)) {
                    u.generarMensajeGenerico(this, Utilidades.ERROR_FALLO,
                        "Error de contrase√±a", 
                        "Las contrase√±as no coinciden.",
                        "Actualizaci√≥n", JOptionPane.ERROR_MESSAGE, 150, 150);
                    return;
                }

                // Establecer nueva contrase√±a
                usuario.setContrasena(nuevaContrasena);
            }
            
            
            // Si no hay conflicto, actualizar
            if (dao.actualizarUsuario(usuario)) {
                u.generarMensajeGenerico(this, Utilidades.USUARIO_ACTUALIZADO,
                    "¬°Actualizaci√≥n exitosa!",
                    "Los datos del usuario se actualizaron correctamente.",
                    "Actualizaci√≥n", JOptionPane.INFORMATION_MESSAGE, 150, 150);
                btnEditarToggle.setSelected(false);
                btnEditarToggle.setText("‚úé Editar");
                setModoEdicion(false);
            } else {
                u.generarMensajeGenerico(this, Utilidades.ERROR_FALLO,
                    "¬°Error al actualizar!", 
                    "Ocurri√≥ un error al actualizar el usuario.",
                    "Error", JOptionPane.ERROR_MESSAGE, 150, 150);
            }
            
            Direccion direccionSeleccionada = (Direccion) jCBDirecciones.getSelectedItem();
            usuario.setDireccionSeleccionada(direccionSeleccionada);
           
            DireccionDAO direccionDAO = new DireccionDAO();
            boolean actualizado = direccionDAO.marcarComoPrincipal(
                direccionSeleccionada.getId(),
                usuario.getId()
            );

            if (!actualizado) {
                JOptionPane.showMessageDialog(this, "No se pudo marcar la direcci√≥n como principal.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (Exception e) {
            u.generarMensajeGenerico(this, Utilidades.ERROR_FALLO,
                "¬°Error al actualizar!", "Ocurri√≥ un error al guardar los cambios " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE, 150, 150);
        }
        
        
    }
    
    private void setModoEdicion(boolean activo) {
        txtNombre.setEnabled(activo);
        txtUsuario.setEnabled(activo);
        txtCorreo.setEnabled(activo);
        txtTelefono.setEnabled(activo);
        jDCFechaN.setEnabled(activo);
        btnGuardar.setEnabled(activo);
        btnCancelar.setEnabled(activo);
        txtNuevaContrasena.setEnabled(activo);
        txtConfirmarContrasena.setEnabled(activo);
    }
    
    private boolean hayCambios(){
        Usuario u = Usuario.getUsuarioActual();
        
        String nombre = txtNombre.getText().trim();
        String usuarioNombre = txtUsuario.getText().trim();
        String correo = txtCorreo.getText().trim();
        String telefono = txtTelefono.getText().trim();
        java.util.Date fecha = jDCFechaN.getDate();

        if (!nombre.equals(u.getNombre())) return true;
        if (!usuarioNombre.equals(u.getUsuarioNombre())) return true;
        if (!correo.equals(u.getEmail())) return true;
        if (!telefono.equals(u.getTel())) return true;
        if (fecha == null || !fecha.equals(u.getFechaNacimiento())) return true;

        String nuevaContrasena = new String(txtNuevaContrasena.getPassword()).trim();
        String confirmarContrasena = new String(txtConfirmarContrasena.getPassword()).trim();

        return !nuevaContrasena.isEmpty() || !confirmarContrasena.isEmpty();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDireccion;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnEditarToggle;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarDireccionPrincipal;
    private javax.swing.JToggleButton btnVerConfirmarContra;
    private javax.swing.JToggleButton btnVerNuevaContra;
    private javax.swing.JComboBox<Direccion> jCBDirecciones;
    private com.toedter.calendar.JDateChooser jDCFechaN;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtConfirmarContrasena;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtNuevaContrasena;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}